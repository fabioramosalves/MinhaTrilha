package lambdas;

import java.security.SecureRandom;

public class Threads {

	public static void main(String[] args) {

		Runnable trabalho1 = new Trabalho1();

		Runnable trabalho2 = new Runnable() {

			public void run() {
				for (int i = 0; i < 10; i++) {
					System.out.println("Trabalho #02");
					try {
						Thread.sleep(100);
					} catch (Exception e) {
						// TODO: handle exception
					}
				}
			}
		};

		Runnable trabalho3 = () -> trabalho();
		
		Runnable trabalho4 = Threads::trabalho;

		Thread t1 = new Thread(trabalho1);
		Thread t2 = new Thread(trabalho2);
		Thread t3 = new Thread(trabalho3);
		Thread t4 = new Thread(trabalho4);
		
		t1.start();
		t2.start();
		t3.start();
		t4.start();

	};

	static void trabalho() {
		var t = generateRandomPassword(10);
		for (int i = 0; i < 10; i++) {
			System.out.println(t);
			try {
				Thread.sleep(100);
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
	}
	
	public static String generateRandomPassword(int len)
    {
        // intervalo ASCII – alfanumérico (0-9, a-z, A-Z)
        final String chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
 
        SecureRandom random = new SecureRandom();
        StringBuilder sb = new StringBuilder();
 
        // cada iteração do loop escolhe aleatoriamente um caractere do dado
        // intervalo ASCII e o anexa à instância `StringBuilder`
 
        for (int i = 0; i < len; i++)
        {
            int randomIndex = random.nextInt(chars.length());
            sb.append(chars.charAt(randomIndex));
        }
 
        return sb.toString();
    }
 
    public static void main(String[] args)
    {
        int len = 10;
        System.out.println(generateRandomPassword(len));
    }
}
